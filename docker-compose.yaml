services:
  backend:
    build:
      context: ./tonix-backend

    env_file: .env
    restart: always
    tty: true

    develop:
      watch:
        - action: sync+restart
          path: ./tonix-backend
          target: /tonix-backend/

    depends_on:
      redis:
        condition: service_healthy
        restart: true
      migrations:
        condition: service_completed_successfully
        restart: true

  postgres:
    image: postgres
    restart: always
    shm_size: 128mb
    env_file: .env
    ports:
      - 5432:5432
    volumes:
      - .volumes/postgres:/usr/local/pgsql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d admin"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrations:
    build:
      context: ./migrations/
    command: migren top
    env_file: .env
    tty: true

    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:latest
    command: redis-server --appendonly yes --save 60 1 --loglevel verbose --maxmemory 128mb --requirepass "password"
    tty: true
    restart: always
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "password", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./.volumes/redis:/data

  nginx:
    image: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

    develop:
      watch:
        - action: restart
          path: ./nginx.conf

    depends_on:
      - backend
